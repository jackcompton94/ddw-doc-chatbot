[
    {
        "title": "Eureka Explorer lineage: internal enablement and troubleshooting",
        "content": "What is data lineage?\nDraft: Data lineage visually tells the story of how your data moves through your data pipeline. Lineage provides teams the ability to quickly trace data through the systems in order to trust the quality and reliability with clear visibility into where it’s coming from, where it’s going, and how it’s been changed. It helps data teams quickly troubleshoot the root cause of errors, analyze the impact of changes, see the data landscape in order to stay compliant.\n\nWhat is technical lineage?\nTechnical lineage gives data engineers and other technical users a zoomed-in view of infrastructure and data transformations. It allows users to view lineage at the table, column, and query-level, tracing its path through data pipelines.\n\nSee white paper\n\nWhat does lineage mean at data.world?\n\nEureka Explorer is the visual, graph representation of the resources in your catalog. Starting with lineage relationships, Explorer allows users to navigate their data catalog through the automated data lineage relationships built by our data.world catalog collectors. What set Eureka Explorer apart from other solutions?\n\nKnowledge-graph-based lineage displays technical details of how sources and individual data elements are transformed and how those data elements connect to business concepts, metrics, people and decisions\n\nApproachable interface with nested levels of detail satisfy use cases for casual data consumers and data engineers focused on technical use cases like impact analysis and migration strategies\n\nSee visuals, explore data flows, and query the lineage to programmatically answers questions like “what is every downstream asset leveraging a specific column?”\n\nMap data to familiar business terms and deliver a unified, consolidated view of data to the entire organization, enabling  the data lineage to be queried in order to answer any type of question\n\nFrom internal sales docs\n\nWhat does enabling Eureka Explorer get me?\nEnabling Eureka Explorer in the UI will allow users to see the data lineage resources from the resource page. \n\nWhen enabled, a user navigating a resource page will see a Lineage Preview section appear with a summary of the resources that are upstream and/or downstream from the particular resource. NOTE: If the particular resource does not have lineage connections (i.e lineage predicates) connecting to another resource, the preview section will not appear.\n\nFrom the Lineage Preview section, users will see a button that says “Show Fullscreen”. This will open a full-screen modal that visualizes the upstream and downstream lineage connections. \n\nThe Basics\nWhat is Automated Data Lineage?\n\nAutomated data lineage relationships are those built with the data.world catalog collectors. Our collectors analyze metadata via APIs, SQL queries and more and automatically scan and build data lineage relationships.\n\nWhat collectors support lineage and in what capacity?\n\nCurrently supported data sources \n\nHow do I check if an org has lineage to display?\nAfter the collector has run, users can use the Lineage Analysis queries available in the Collector Warehouse. Use FindLineageResources.rq by changing the org base url and run this query against the catalog of the org you are verifying.\n\n\nHow do I enable Eureka Explorer lineage in the UI?\nCheck out Eureka Explorer Lineage | Enablement | Enablement Process \n\nHow do I verify that Eureka Explorer is enabled?\nVerify the entitlement is set to true from the admin portal\n\nCheck the “How do I check if an org has lineage to display?” above to find a resource that has lineage to display. \n\nNavigate to a resource you feel should have lineage - something that was collected from the latest lineage-enhanced collector - and confirm if you see a lineage preview section. If you do not, then it is likely either lineage is not enabled, or there was an error in the metadata parsing during collection. Note: currently, lineage is parsed from database view ddls, APIs, and other means. If you feel like lineage should have been collected, contact support to file a defect to find out why.\n\nWhat types of resources will the Explorer work with?\nCurrently, the Explorer will only show resources that have data lineage. \n\nIn practical terms, this means that any resources that are connected via data will be shown. See “Background Info” section above for more information on data lineage. As an example we support database objects AND BI tools that use that data. \n\nFor more technical details see the “How does the Eureka Explorer work” section below.\n\nBy default, what information is displayed in the sidebar?\nCheck out Customize sidebar for Explorer lineage pages \n\nHow can you customize the sidebar?\nCheck out Customize sidebar for Explorer lineage pages \n\nWhat information is available to export?\nUsers can export a csv that lists the names and some metadata about each resource in the lineage diagram. Users can preview the data and decide to pre-filter the data, prior to export. The export summary provides an aggregate of what is about to be exported. As the data is filtered, the summary updates.\n\nFilter Definitions:\n\nLineage / Direction: which direction lineage flows from the focused resource to the related resources of the current diagram\n\nResource types: list of each resource type included in the current diagram\n\nSource (technology): list of each source technology from which the resources were collected and sourced\n\nStatus: list of statuses of the resources included in the current diagram\n\nSteward: list of stewards of the resources included in the current diagram\n\nOther Exported Field Definitions:\n\nDistance: how far the related resource is from the focused resource (NOTE: distance 0 means it is the focused resource)\n\nParent: the name of the parent resource the listed resource is part of (if applicable)\n\nAdvanced\nHow does the Eureka Explorer work?\nThe query that powers the Eureka Explorer actually focuses on the predicates, not the actual resources that are connected. This means that you can actually build lineage from any set of resources as long as you use the right predicates. These predicates are prov:wasDerivedFrom and any subProperties of it. This means that if any resource has this predicate connecting it to another resource, we determine that resource to have lineage and the Explorer will be have information to visualize.\n\nThis also means that for technical users, they can build their own lineage visualizations as long as they use those predicates. See the “How do I build custom lineage” section below for more information.\n\nHow do I build custom lineage?\nAs mentioned above, the Eureka Explorer uses predicates to create the visualization. Currently, that support is for prov:wasDerivedFrom and its subProperties. To visualize two resources A & B as connected via lineage you can write the triple:\n\n\n\n:resourceB prov:wasDerivedFrom :resourceA\n \n\nHow do I build a pro\n\nTroubleshooting\nLineage is enabled but why don’t I see a preview on the resource page?\nIt’s likely that the resource does not have lineage to be displayed. The preview only pops up when we know this resource is connected to another resource via the predicate prov:wasDerivedFrom and it’s sub-properties.\n\n \n\nI’m expecting to see X resource connected to Y resource. Why don’t I see it in Explorer?\nFor a resource to be shown in the full-screen lineage. It must be connected to another resource via the predicate prov:wasDerivedFrom and it’s sub-properties. That is likely the issue. If you do see the predicates, check what X resource is connected to. If it’s not on the direct path from the node that is focused on, you may have to recenter the lineage to see other resources.\n\n",
        "url": "https://dataworld.atlassian.net/wiki/spaces/PEIB/pages/1372127309/Eureka+Explorer+lineage+internal+enablement+and+troubleshooting"
    },
    {
        "title": "Eureka Explorer Lineage | Enablement\n\n",
        "content": "Eureka Explorer is available for customers on the new 2022 Standard Plan or above. Older Standard Plan customers must have lineage on their order form. Currently, it can only be enabled by a data.world support agent. This cannot be done by users looking to self-service. \n\nEnabling Eureka Explorer is done on the org level through an entitlement. By turning on the `nativeLineageEnabled` entitlement the entire org will have access to lineage. This can not be done on a per user level or per collection level.\n\nEnablement Process\nSetup \nCollectors\n\nAs collectors get updated, users will automatically start collecting lineage information for the sources that support it. Currently, it's limited to a few sources, but we have a roadmap with a plan to support more\n\nOlder collector versions may not retrieve as much lineage metadata, so make sure you’re running the latest version of the collectors\n\nVerification\nBefore turning on the Explorer for our customers, we should attempt to make sure their first experience is a great experience. Therefore we want to run some lineage analysis on their catalog to make sure things will appear when we enable the flag\n\nUse the collector warehouse Lineage Analysis queries to determine what lineage has been collected. \n\n Find Lineage in the UI\n\nThe first step to enabling the Eureka Explorer is to make sure the information is updated in the Catalog Configuration dataset since if the information is not there, nothing will show up in the UI.\n\nThis query will search across the Catalog Configuration dataset to find the predicates that the explorer can use to display lineage\n\nIf you do not get any results back, or the results are smaller than you expected, run the below queries to find out more information. \n\nHow to use video: collector-warehouse/lineage-analysis | Workspace | data.world - 3 October 2022 \n\nFind Lineage Collected\n\nWe use this query to find out whether we were able to collect lineage during a collector run.\n\nThis query will search across all the selected datasources to find predicates that have been written by our collectors that can be displayed in the Explorer\n\nIf this query returns back results but the Find Lineage in the UI query did not, then it’s likely that the metadata is not being written into the Configuration dataset properly. Try syncing the files in the Configuration dataset and/or check the build queries bringing data in to confirm there isn’t an error\n\nIf this query doesn’t return back results, then either \n\nThe datasource doesn’t have lineage to collect\n\nCould be the user doesn’t have permissions or is pointing towards the wrong schema\n\nWe don’t support collecting lineage from this datasource just yet or a newer version of the collector needs to be used\n\nThere was an issue during SQL parsing\n\nUse the advanced query below to dive a bit deeper into the lineage parsing to understand if parsing errors caused lineage information not to be collected\n\nAnalyze SQL Parsing [Optional]\n\nAs part of the newest collectors, we parse the SQL that makes up Views to create lineage relationships. This query helps analyze that SQL parsing to understand whether it was successful and we were able to extract lineage, or if the parsing was unsuccessful what went wrong. \n\nThis query doesn’t need to be run but it’s very useful to understand why certain lineage might not be showing up\n\nEnablement\nAsk support to turn on the nativeLineageEnabled entitlement\n\nTurning on this nativeLineageEnabled flag will enable the lineage section on resources pages (for those resources that have lineage relationships)",
        "url": "https://dataworld.atlassian.net/wiki/spaces/PEIB/pages/1405386763/Eureka+Explorer+Lineage+Enablement"
    }
]
